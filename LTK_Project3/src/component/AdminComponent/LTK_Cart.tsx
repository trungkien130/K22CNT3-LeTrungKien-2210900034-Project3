import React, { useEffect, useState } from "react";
import instance from "../../Api/LTK_Api";
import { useNavigate } from "react-router-dom";

interface CartItem {
  maGioHang: string;
  maSanPham: string;
  tenSP?: string; // S·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau khi fetch s·∫£n ph·∫©m
  gia?: number;
  soLuong: number;
}

const LTK_Cart = () => {
  const navigate = useNavigate();
  const [cartItems, setCartItems] = useState<CartItem[]>([]);

  useEffect(() => {
    fetchCart();
  }, []);

  const fetchCart = async () => {
    try {
      const response = await instance.get("/ltkGiohang");
      const cartData = response.data.content; // API tr·∫£ v·ªÅ danh s√°ch gi·ªè h√†ng

      if (!Array.isArray(cartData)) {
        setCartItems([]);
        return;
      }

      // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin chi ti·∫øt c·ªßa t·ª´ng s·∫£n ph·∫©m
      const updatedCart = await Promise.all(
        cartData.map(async (item) => {
          try {
            const productResponse = await instance.get(
              `/ltkSanpham/${item.maSanPham}`
            );
            return {
              ...item,
              tenSP: productResponse.data.tenSP, // C·∫≠p nh·∫≠t t√™n s·∫£n ph·∫©m
              gia: productResponse.data.gia, // C·∫≠p nh·∫≠t gi√° s·∫£n ph·∫©m
            };
          } catch (error) {
            console.error(`L·ªói khi l·∫•y s·∫£n ph·∫©m ${item.maSanPham}:`, error);
            return { ...item, tenSP: "Kh√¥ng t√¨m th·∫•y", gia: 0 };
          }
        })
      );

      setCartItems(updatedCart);
    } catch (error) {
      console.error("L·ªói khi l·∫•y gi·ªè h√†ng:", error);
      setCartItems([]);
    }
  };

  const handleRemoveItem = async (maSanPham: string) => {
    if (
      !window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng?")
    )
      return;

    try {
      await instance.delete(`/ltkCart/${maSanPham}`);
      alert("ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng!");
      fetchCart(); // C·∫≠p nh·∫≠t l·∫°i gi·ªè h√†ng sau khi x√≥a
    } catch (error) {
      console.error("L·ªói khi x√≥a s·∫£n ph·∫©m:", error);
      alert("X√≥a s·∫£n ph·∫©m th·∫•t b·∫°i!");
    }
  };

  return (
    <div className="container mt-4">
      <h1 className="text-center">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h1>

      <div className="d-flex justify-content-start mb-3">
        <button className="btn btn-primary" onClick={() => navigate("/admin")}>
          Tr·ªü v·ªÅ Dashboard
        </button>
      </div>

      {cartItems.length === 0 ? (
        <p className="text-center text-muted">Gi·ªè h√†ng tr·ªëng!</p>
      ) : (
        <table className="table table-striped text-center">
          <thead className="table-dark">
            <tr>
              <th>M√£ SP</th>
              <th>T√™n s·∫£n ph·∫©m</th>
              <th>Gi√°</th>
              <th>S·ªë l∆∞·ª£ng</th>
              <th>Th√†nh ti·ªÅn</th>
              <th>Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {cartItems.map((item) => (
              <tr key={item.maGioHang}>
                <td>{item.maSanPham}</td>
                <td>{item.tenSP || "ƒêang t·∫£i..."}</td>
                <td>{item.gia ? `${item.gia.toLocaleString()} VND` : "N/A"}</td>
                <td>{item.soLuong}</td>
                <td>
                  {item.gia
                    ? (item.gia * item.soLuong).toLocaleString()
                    : "N/A"}{" "}
                  VND
                </td>
                <td>
                  <button
                    className="btn btn-danger btn-sm"
                    onClick={() => handleRemoveItem(item.maSanPham)}
                  >
                    ‚ùå X√≥a
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
};

export default LTK_Cart;
